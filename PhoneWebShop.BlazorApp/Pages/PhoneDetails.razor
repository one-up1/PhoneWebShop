@using ApiClient;
@using PhoneWebShop.Domain.Entities;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore

@page "/phone/{Id:int}"

@if (phone == null)
{
    <h3>Loading</h3>
}
else
{
    <div>
        <div class="phone">
            <h3>@phone.FullName</h3>
            <Button Color="Color.Primary" Type="ButtonType.Link" To="/" class="back-button">Back</Button>

            <img src="phone.png" />
            <div class="phone-info">
                <h4>&euro;@phone.VATPrice</h4>

                @if (phone.Stock > 5)
                {
                    <p>phone.Stock in stock</p>
                }
                else
                {
                    <p>Almost out of stock! Only @phone.Stock left!</p>
                }
            </div>

            <div class="phone-description">
                @phone.Description
            </div>

            @if (token != null)
            {
                <Button Color="Color.Primary" Clicked="Delete">Delete</Button>
            }
        </div>
    </div>
}

@code {
    /*[Inject]
    IPhoneService PhoneService { get; set; }*/

    [Inject]
    ApiClient ApiClient { get; set; }

    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Parameter]
    public int Id { get; set; }

    private Phone phone;
    private string token;

    protected override async void OnInitialized()
    {
        base.OnInitialized();

        var result = await ProtectedSessionStore.GetAsync<string>("token");
        if (result.Success)
        {
            token = result.Value;
        }

        phone = await ApiClient.Get<Phone>("Phones", Id);
        StateHasChanged();
    }

    async void Delete()
    {
        HttpResponseMessage res = await ApiClient.Delete("Phones", phone.Id, token);
        if (res.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/");
        }
    }
}
